html {
  scroll-behavior: smooth;
}

body {
  font-family: 'Noto Sans KR', system-ui, -apple-system, BlinkMacSystemFont,
    'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
    sans-serif;
  font-size: 16px;
  color: var(--font-default-color);
}

h1,
h2,
h3,
h4 {
  font-family: 'Jua', serif;
  font-weight: 400;
  font-style: normal;
}

#app {
  display: flex;
  flex-direction: row;
  min-height: 100vh;
}

header {
  padding-top: var(--page-padding);
  width: var(--header-width);
  background-color: var(--header-bg-color);
  flex-shrink: 0;
  position: fixed;
  height: 100vh;
}

h1.logo {
  display: flex;
  flex-direction: column;
  align-items: center;
}

h1.logo span.text {
  padding: 16px;
  font-size: 1.8rem;
}

main {
  padding: var(--page-padding);
  margin-left: var(--header-width);
  margin-right: var(--aside-width);
}

h2.title {
  font-size: 2.4rem;
  margin-bottom: 24px;
}

h3.subtitle {
  font-size: 1.6rem;
  margin: var(--page-subtitle-margin-y) 0;
}

h4 {
  font-size: 1.4rem;
  margin-bottom: var(--page-subtitle-margin-y);
}

section > p,
article > p {
  line-height: 24px;
  word-break: keep-all;
}

strong {
  font-size: 1.1rem;
  font-weight: 700;
}

section,
article {
  display: flex;
  flex-flow: column;
}

div.thumbnail {
  display: flex;
  justify-content: center;
  margin-bottom: var(--page-paragraph-margin-y);
}

section::after {
  content: '';
  display: block;
  margin-top: var(--page-subtitle-margin-y);
  border-bottom: 1px solid var(--divider-color);
}

hr {
  border: 1px solid var(--divider-color);
}

aside {
  padding-top: var(--page-padding-top);
  width: var(--aside-width);
  background-color: var(--aside-bg-color);
  flex-shrink: 0;
  position: fixed;
  height: 100vh;
  right: 0;
}

aside h2 {
  font-size: 1.7rem;
}

.profile-image {
  background-image: url('../images/profile-image.webp');
  background-size: 100%;
  background-position: center 100%;
  width: var(--aside-width);
  height: var(--aside-width);

  text-indent: -1000rem;
}

aside.right-sidebar nav {
  padding: var(--right-sidebar-padding);
}

ol.contents {
  list-style-type: decimal;
  padding: 24px;
}

ol.contents li:not(:last-child) {
  margin-bottom: 16px;
}

ol.contents li a {
  text-decoration: none;
  color: var(--font-default-color);
}

footer {
  display: flex;
  flex-direction: column;
  padding-top: var(--page-padding-top);
  align-items: center;
  margin: 24px;
}

footer p {
  margin-top: 8px;
}

.separator {
  height: var(--page-subtitle-margin-y);
}

:root {
  --page-padding: 48px;
  --page-subtitle-margin-y: 32px;
  --page-paragraph-margin-y: 16px;
  --right-sidebar-padding: 32px;

  --header-width: 235px;
  --header-bg-color: #6cabdd;

  --aside-width: 350px;
  --aside-bg-color: #6cabdd;

  --divider-color: #efefef;
  --font-default-color: #333;
}

.title {
  display: inline-block;
}

.title span {
  display: inline-block; /* transform에 반응하도록 inline-block 권장 */
  animation: bounce 2s infinite; /* 2초 동안 무한 반복, 취향에 맞게 조절 가능 */
  /* animation-timing-function: ease;  // 추가로 전역 타이밍 함수를 설정해도 됨 */
}

/* 각 글자마다 살짝 지연 시간을 달리 주면 순차적으로 튀는 효과 */
.title span:nth-child(1) {
  animation-delay: 0s;
}
.title span:nth-child(2) {
  animation-delay: 0.2s;
}
/* 글자 수에 맞춰 nth-child(3), (4)... 이런 식으로 delay를 늘려주면 됨 */

/* 키프레임 정의 */
@keyframes bounce {
  0%,
  20%,
  53%,
  80%,
  100% {
    transform: translateY(0);
  }
  40%,
  43% {
    transform: translateY(-50px); /* 가장 크게 튀어오르는 지점 */
  }
  70% {
    transform: translateY(-25px); /* 중간에 다시 살짝 튀어오르기 */
  }
  90% {
    transform: translateY(-4px); /* 거의 바닥에 가깝게 한 번 더 튀기 */
  }
}

/* 갤러리 전체 스타일 */
.gallery {
  display: grid;
  grid-template-columns: repeat(3, 1fr); /* 3열 */
  gap: 1px;
  padding: 0 auto; /* 중앙 정렬 */
}

/* 정사각형을 유지하기 위한 래퍼 */
.gallery-item {
  position: relative;
  width: 100%;
  padding-bottom: 100%; /* 높이를 width의 100%로 = 정방형 */
  overflow: hidden;
}

/* 이미지를 정사각형 래퍼 내에서 꽉 차도록 */
.gallery-item img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  object-fit: cover; /* 이미지가 영역을 넘치지 않도록 비율 유지 + 꽉 채움 */
}
